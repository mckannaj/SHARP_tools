% Zephy McKanna
% codeScenarioFromShift()
% 5/25/15
% 
% Takes a shift name (string) and returns one of the following codes, for
% one of the following scenarios:
%
% 1 = AssemblyLine
% 2 = RobotConstruction
% 3 = NeuralEncoding
% 4 = MonocularInspection
% 5 = OcularInspection
%
function [scenarioCode] = codeScenarioFromShift(shiftName)
    if (nargin ~= nargin('codeScenarioFromShift'))
        error('codeScenarioFromShift expects %d inputs, but received %d. Please update any calling code.\n', nargin('codeScenarioFromShift'), nargin);
    end
    
    scenarioCode = 0; % assume unknown / error
    switch shiftName
        case {'Color Balancing (U)', 'Duplicate Mitigation (U)', 'Green Synergizing (I)', 'Locomotive Training (I)', ...
                'Limb Management (I)',  'Stereoizing (I)', 'Special Orders (S)', 'Monocular Inspection (S)', ...
                'Part Number Balancing (S)', 'Altitude Viewing (S)', 'Eye Inspection (U/I)', 'Head and Shoulders (U/I)', ...
                'Odditizing (U/I)', 'Cranial Equilibrium (U/I)', 'Arm Matching (U/I)', 'Arm Prioritization (S/I)', ...
                'Part Calculation (S/I)', 'Head Removal (S/I)', 'Chromatic Manipulation (S/I)', ...
                'Part ID Gleaning (U/S)', 'Eye Scrobbling (U/S)', 'Optical Positioning (U/S)', ...
                'Achievement Hunting (U/S)', 'Eye Symmetrizing (U)', 'Hand Exemption (U)', 'Braincase Downsizing (I)', ...
                'Eye Intermediation (I)', 'Sensor Peripheralizing (S)', 'Head Heuristics (S)', 'Digit Arrangement (U/I)', ...
                'PIN Defraudment (U/I)', 'Ocular Orientation (S/I)', 'Limb Chromatizing (U/S)', 'Serial Verification (U/S)', ...
                'Uniqueness Justification (U/S)', '4b T:1a - rm Prrtzng', '4b T:1c - AAAAAAAA', '4b T:1b - O_gan Failure?', ...
                '4b T:2a - Meat-Bag Edition', 'Simple Allocating', 'Basic Organizing', 'Mid-level Syngergizing', ...
                'Advanced Allocating', 'Mega Clumpifying', 'Intense Glombing'}
            scenarioCode = 1; % AssemblyLine
        case {'Basic Fitting (U)', 'Symbolic Matching (U)', 'Green Synergizing 2 (I)', 'Fault Limitations (I)', ...
                'Gamifying Medicine (I)', 'Colorizing Careers (I)', 'Head Hueing (S)', 'Fracture Mitigation (S)', ...
                'Chestial Numbering (S)', 'Designation Tinting (S)', 'Chest Digitizing (U/I)', 'Limb Reparations (U/I)'...
                'Brain Deficiencies (U/I)', 'Iconography (S/I)', 'Failure Drilling (S/I)', 'Dangerous Gaming (S/I)', ...
                'Battlefield Medicine (S/I)', 'Cross Checking (U/S)', 'Naturalized Decommissioning (U/S)', ...
                'Advanced Categorization (U/S)', 'Compliance Distributing', 'Logistical Analyzing', 'Product Paradigming', ...
                'Orchestrating Compliance', 'Assemblage Fabrication', 'Maximum Fingling'}
            scenarioCode = 2; % RobotConstruction
        case {'Organism Culling (U)', 'Count Quantizing (U)', 'Memory Management(U)', 'Snake Identification (I)', ...
                'Transportationization (I)', 'Emotional Imprinting (I)', 'Map Orgling (I)', 'Genderization (S)', ...
                'Lesson Planning (S)', 'Job Differentiation (S)', 'Face Numbering (U/I)', 'Terrestrial Tiering (U/I)', ...
                'Aeronautical Categorization (S/I)', 'Craftsmans Critiquing (S/I)', 'Avoidance Training (S/I)', ...
                'Aviation Aspectizing (U/S)', 'Intent Estimation (U/S)', 'Verbal Repetition (U)', 'Primetizing (U)', ...
                'ATC Prioritizing (I)', 'Serpentinian Exclusion (I)', 'Emotionalizing Literature (S)', ...
                'Avionic Sequentializing (S)', 'PI Memorization (U/I)', 'Cartography Catharsis (S/I)' ...
                'Genus Logistics (U/S)', 'Culinary Itemization (U/S)', 'Arithmetic Training (U/S)', ...
                'Word/Number Partitioning (U/S)', '4b T:3a - Specializations', '4b T:3c - Penultimations', ...
                '4b T:2b - For exceptional testers', '4b T:2c - Extended training', 'Sort Grouping', 'Input Processing', ...
                'Defraggling'}
            scenarioCode = 3; % NeuralEncoding
        case {'Localized Vision (U)', 'Spatial Troning (U)', 'Flipper Exception (I)', 'Complex Biodigitizing (I)', ...
                'Area Allocation (S)', 'Conveyance Arithmetic (S)', 'Language Crunching (U/I)', 'Generational Gapping  (S/I)', ...
                'Organizational Balancing (U/S)', 'Organism Grading (U/S)', 'Recognition Profiling (U/S)', ...
                'Adv. Arithmetic Training (U/S)', '4b T:3b - Extreme Categorizing', 'Refractilating Reticulations', ...
                'Classification Sensing', 'Complex Codifying'}
            scenarioCode = 4; % MonocularInspection
        case {'4a Update Switch V1 (U/S)', '4a Update Switch V1 - 2 (U/S)', 'Biological Itemizing (U/S)', ...
                'Reptile Plotting (U/S)', 'Algorithmic Comprehension (S/I)', 'Typographic Trigonometry (U/I)', ...
                'Theoretical Aerodynamics (U/I)', 'Mammalian Maneuvering (U/I)', '4a Update Switch V2 (U/S)', ...
                '4a Update Switch V2 - 2 (U/S)' 'Dimensional Jargonization (U/S)', 'Proportional Sympathizing (U/S)', ...
                'Computational Vocalizations (S/I)', 'Tetromino Groking (U/I)'}
            scenarioCode = 5; % OcularInspection
        otherwise
            warning('codeScenarioFromShift: unexpected shift name: %s\n', shiftName);
    end

    if (scenarioCode == 0) 
        fprintf('codeScenarioFromShift: unknown scenario code for %s; returning 0.\n', shiftName);
    end
end
